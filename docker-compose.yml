version: '3.8'

services:
  electionguard-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: electionguard-js-api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - API_KEY=your-secure-api-key-here
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8080
      - RATE_LIMIT_WINDOW=15
      - RATE_LIMIT_MAX=100
      - LOG_LEVEL=info
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - electionguard-network

  # Optional: Redis for session management and caching
  redis:
    image: redis:7-alpine
    container_name: electionguard-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass your-redis-password
    networks:
      - electionguard-network

  # Optional: PostgreSQL for persistent storage
  postgres:
    image: postgres:15-alpine
    container_name: electionguard-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=electionguard
      - POSTGRES_USER=electionguard
      - POSTGRES_PASSWORD=your-secure-db-password
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - electionguard-network

  # Optional: Nginx as reverse proxy
  nginx:
    image: nginx:alpine
    container_name: electionguard-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl:ro
    depends_on:
      - electionguard-api
    restart: unless-stopped
    networks:
      - electionguard-network

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: electionguard-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - electionguard-network

  # Optional: Grafana for monitoring dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: electionguard-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - electionguard-network

networks:
  electionguard-network:
    driver: bridge

volumes:
  redis-data:
  postgres-data:
  prometheus-data:
  grafana-data:
